use from_to_repr::from_to_other;
use serde::{Deserialize, Serialize};


#[derive(Clone, Copy, Debug, Deserialize, Serialize)]
#[from_to_other(base_type = u32, derive_compare = "as_int")]
pub(crate) enum CapabilityIdentifier {
    BposSDeskless = 1,
    BposSStandard = 2,
    BposSEnterprise = 3,
    BposSArchive = 5,
    BposLStandard = 6,
    BposBStandard = 7,
    BposBCustomDomain = 8,
    BposSMidSize = 9,
    BposSArchiveAddon = 10,
    BposSEopStandardAddOn = 11,
    BposSEopPremiumAddOn = 12,
    BposUnmanaged = 13,
    BposSAtpAddOn = 14,
    BposSAnalytics = 15,
    BposSFoundation = 16,
    BposSEquivioAnalytics = 17,
    BposSCustomerLockbox = 18,
    Sbrm = 19,
    BposSEssentials = 20,
    BposSThreatIntelligenceAddOn = 21,
    BposSBookingsAddOn = 22,

    TouSigned = 32,
    FederatedUser = 33,
    PartnerManaged = 34,
    MasteredOnPremise = 35, // sic
    ResourceMailbox = 36,
    ExcludedFromBackSync = 37,
    UmFeatureRestricted = 38,
    RichCoexistence = 39,
    OrganizationCapabilityUmGrammar = 40,
    OrganizationCapabilityUmDataStorage = 41,
    OrganizationCapabilityOabGen = 42,
    OrganizationCapabilityGmGen = 43,
    OrganizationCapabilityClientExtensions = 44,
    BevDirLockdown = 45,
    OrganizationCapabilityUmGrammarReady = 46,
    OrganizationCapabilityMailRouting = 47,
    OrganizationCapabilityManagement = 48,
    OrganizationCapabilityTenantUpgrade = 49,
    OrganizationCapabilityScaleOut = 50,
    OrganizationCapabilityMessageTracking = 51,
    OrganizationCapabilityPstProvider = 52,
    OrganizationCapabilitySuiteServiceStorage = 53,
    OrganizationCapabilityOfficeMessageEncryption = 54,
    OrganizationCapabilityMigration = 55,
    UmPlanAllowed = 56,
    OrganizationCapabilityOabReplica = 57,
    OrganizationCapabilityOfficeGraph = 64,
    OrganizationCapabilityOfficeMessageEncryptionStore = 65,
    OrganizationCapabilityShardRelevancyFeatureStore = 66,
    OrganizationCapabilityOrgPartition = 67,

    Other(u32),
}

#[derive(Clone, Copy, Debug, Deserialize, Serialize)]
#[from_to_other(base_type = i32, derive_compare = "as_int")]
pub(crate) enum RecipientDisplayType {
    MailboxUser = 0x0000_0000,
    DistributionGroup = 0x0000_0001,
    PublicFolder = 0x0000_0002,
    DynamicDistributionGroup = 0x0000_0003,
    Organization = 0x0000_0004,
    PrivateDistributionList = 0x0000_0005,
    RemoteMailUser = 0x0000_0006,
    ConferenceRoomMailbox = 0x0000_0007,
    EquipmentMailbox = 0x0000_0008,
    ArbitrationMailbox = 0x0000_000A,
    MailboxPlan = 0x0000_000B,
    LinkedUser = 0x0000_000C,
    RoomList = 0x0000_000F,
    TeamMailboxUser = 0x0000_0010,
    GroupMailboxUser = 0x0000_0011,
    SchedulingMailbox = 0x0000_0012,

    AclAbleMailboxUser = 0x40000000,
    AclAbleRemoteMailUser = 0x40000006,
    AclAbleConferenceRoomMailbox = 0x40000007,
    SecurityDistributionGroup = 0x40000009,
    AclAbleTeamMailboxUser = 0x40000010,

    SyncedMailboxUser = 0x80000006u32 as i32,
    SyncedUDGasUDG = 0x80000101u32 as i32,
    SyncedUDGasContact = 0x80000106u32 as i32,
    SyncedPublicFolder = 0x80000206u32 as i32,
    SyncedDynamicDistributionGroup = 0x80000306u32 as i32,
    SyncedRemoteMailUser = 0x80000606u32 as i32,
    SyncedConferenceRoomMailbox = 0x80000706u32 as i32,
    SyncedEquipmentMailbox = 0x80000806u32 as i32,
    SyncedUsgAsUdg = 0x80000901u32 as i32,
    SyncedUsgAsContact = 0x80000906u32 as i32,
    SyncedTeamMailboxUser = 0x80001006u32 as i32,

    AclAbleSyncedMailboxUser = 0xC0000006u32 as i32,
    AclAbleSyncedRemoteMailUser = 0xC0000606u32 as i32,
    AclAbleSyncedConferenceRoomMailbox = 0xC0000706u32 as i32,
    AclAbleSyncedUsgAsContact = 0xC0000906u32 as i32,
    SyncedUsgAsUsg = 0xC0000909u32 as i32,
    AclAbleSyncedTeamMailboxUser = 0xC0001006u32 as i32,

    Other(i32),
}

#[derive(Clone, Copy, Debug, Deserialize, Serialize)]
#[from_to_other(base_type = i32, derive_compare = "as_int")]
pub(crate) enum RoleGroupType {
    OrganizationManagement = 1,
    RecipientManagement = 2,
    ViewOnlyOrganizationManagement = 3,
    PublicFolderManagement = 4,
    UmManagement = 5,
    HelpDesk = 6,
    RecordsManagement = 7,
    DiscoveryManagement = 8,
    ServerManagement = 9,
    DelegatedSetup = 10,
    HygieneManagement = 11,
    ManagementForestOperator = 12,
    ManagementForestTier1Support = 13,
    ViewOnlyManagementForestOperator = 14,
    ManagementForestMonitoring = 15,
    DataCenterManagement = 16,
    ViewOnlyLocalServerAccess = 17,
    DestructiveAccess = 18,
    ElevatedPermissions = 19,
    ServiceAccounts = 20,
    Operations = 21,
    ViewOnly = 22,
    MsoManagedTenantAdmin = 23,
    MsoMailTenantAdmin = 24,
    MsoManagedTenantHelpdesk = 25,
    ComplianceManagement = 26,
    ViewOnlyPii = 27,
    CapacityDestructiveAccess = 28,
    CapacityServerAdmins = 29,
    CustomerChangeAccess = 30,
    CustomerDestructiveAccess = 31,
    CustomerPiiAccess = 32,
    ManagementAdminAccess = 33,
    ManagementChangeAccess = 34,
    ManagementServerAdmins = 35,
    CapacityDCAdmins = 36,
    NetworkingAdminAccess = 37,
    ManagementDestructiveAccess = 38,
    CommunicationManagers = 39,
    ManagementCACoreAdmin = 40,
    MailboxManagement = 41,
    CapacityFrontendServerAdmins = 42,
    FfoAntiSpamAdmins = 43,
    DedicatedSupportAccess = 44,
    NetworkingChangeAccess = 45,
    AppLockerExemption = 46,
    ECSAdminServerAccess = 47,
    ECSPIIAccessServerAccess = 48,
    ECSAdmin = 49,
    ECSPIIAccess = 50,
    AccessToCustomerDataDCOnly = 51,
    DatacenterOperationsDCOnly = 52,
    OutlookSupportTier0 = 53,
    OutlookSupportTier1 = 54,
    OutlookSupportTier3 = 55,
    O365SupportViewOnly = 56,
    FfoSecServerAdmins = 57,
    FfoDatabaseWriters = 58,
    FfoDatabaseReaders = 59,
    FfoDbAdmins = 60,
    SonarServerAdmins = 61,
    LocalLoadBalancerAdmins = 62,
    DebugServerLogin = 63,
    EDiscoveryManager = 64,
    ComplianceAdministrator = 65,
    OutlookSupportTier9 = 66,
    TorusViewOnlyLinked = 67,
    Reviewer = 68,
    CapacityO365ComputeServerAdmins = 69,
    FfoAntiSpamMasters = 70,
    FfoAntiSpamUsers = 71,
    SupervisoryReview = 72,
    ServiceAssuranceUser = 73,
    OutlookSupportPartnersTier0 = 74,
    OutlookSupportPartnersTier1 = 75,
    OutlookSupportPartnersTier3 = 76,
    OutlookSupportPartnersTier9 = 77,
    MsoManagedComplianceAdministrator = 78,

    DatacenterMailboxManagement = 81,
    FlightTrainAdmin = 82,
    CapacityOfficeDNSAdmins = 83,
    SecurityReader = 84,
    SecurityAdministrator = 85,
    AuxSqlAdminServerAccess = 86,
    MservServerAdmins = 87,
    EopServerAdmins = 88,
    GlsServerAdmins = 89,
    TorusNodeAdmins = 90,

    Other(i32),
}

#[derive(Clone, Copy, Debug, Deserialize, Serialize)]
#[from_to_other(base_type = u32, derive_compare = "as_int")]
pub(crate) enum GroupJoinLeaveRestriction {
    Closed = 0,
    Open = 1,
    ApprovalRequired = 2,
    Other(u32),
}
